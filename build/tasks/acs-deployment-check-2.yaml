apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: acs-deployment-check-2
spec:
  params:
    - name: rox_central_endpoint
      description: Secret containing the address:port tuple for ACS Central (example - rox.stackrox.io:443)
      type: string
    - name: rox_api_token
      description: Secret containing the ACS API token with CI permissions
      type: string
    - name: source_location
      description: Location of the file(s) to be scanned
      type: string
  resources:
    inputs:
      - name: source
        type: git
  results:
    - description: Output of `roxctl deployment check`
      name: check_output
  steps:
    - name: list-files
      image: centos
      resources: {}
      workingDir: /workspace/source
      script: >-
        #!/usr/bin/env bash

        ls -al $(params.source_location)
    - env:
        - name: ROX_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: rox_api_token
              name: $(params.rox_api_token)
        - name: ROX_CENTRAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: rox_central_endpoint
              name: $(params.rox_central_endpoint)
      image: centos
      name: rox-deployment-check
      resources: {}
      script: >-
        #!/usr/bin/env bash

        set +x

        curl -s -k -L -H "Authorization: Bearer $ROX_API_TOKEN"
        https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux --output
        ./roxctl  > /dev/null; echo "Getting roxctl"

        chmod +x ./roxctl  > /dev/null

        for file in $(params.source_location)/*.yaml

        do
          echo "Deployment check on file : $file"
          ./roxctl deployment check --insecure-skip-tls-verify -e $ROX_CENTRAL_ENDPOINT -f $file > $file.scan-result

          cp $file.scan-result /result-files

          echo "=================================================================="
        done


      workingDir: /workspace/source
  workspaces:
  - name: result-files
    mountPath: /result-files
