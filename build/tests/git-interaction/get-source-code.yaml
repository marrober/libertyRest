apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: get-source-code
spec:
  resources:
    inputs:
      - name: source
        type: git
    outputs:
      - name: image-resource
        type: image
  params:
    - name: gitrepository_url
      type: string
    - name: gitrepository_fullname
      type: string
    - name: commit_ref
      type: string
    - name: commit_id
      type: string
    - name: commit_date
      type: string
    - name: commit_message
      type: string
    - name: commit_author
      type: string  
    - name: STORAGE_DRIVER
      type: string
    - name: TLSVERIFY
      type: string
  steps :
    - name: generate
      command:
        - ls
        - -alR
        - build/
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      workingDir: /workspace/source
    - name: display-parameters
      command:
        - /bin/sh
        - '-c'
      args:
        - |-
          echo "--------------------------------------------------------"
          echo "$(params.gitrepository_url)" > info-file
          echo "$(params.gitrepository_fullname)" >> info-file
          echo "$(params.commit_ref)" >> info-file
          echo "$(params.commit_id)" >> info-file
          echo "$(params.commit_date)" >> info-file
          echo "$(params.commit_ref)" >> info-file
          echo "$(params.commit_author)" >> info-file
          echo "--------------------------------------------------------"
          cat info-file
          echo "--------------------------------------------------------"
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      workingDir: /workspace/source
    - name: gen-dockerfile
      command:
        - /bin/sh
        - '-c'
      args:
        - |-
          echo "FROM docker.io/openliberty/open-liberty as runtime-image" > ext-dockerfile.gen
          echo "LABEL github.repository.url=$(params.gitrepository_url)" >> ext-dockerfile.gen
          echo "LABEL github.repository.fullname=$(params.gitrepository_fullname)" >> ext-dockerfile.gen
          echo "LABEL github.commit.ref=$(params.commit_ref)" >> ext-dockerfile.gen
          echo "LABEL github.commit.id=$(params.commit_id)" >> ext-dockerfile.gen
          echo "LABEL github.commit.date=$(params.commit_date)" >> ext-dockerfile.gen
          echo "LABEL github.commit_ref=$(params.commit_ref)" >> ext-dockerfile.gen
          echo "LABEL github.commit_author=$(params.commit_author)" >> ext-dockerfile.gen
          echo "------------------------------"
          cat ext-dockerfile.gen
          echo "------------------------------"
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      volumeMounts:
        - name: envparams
          mountPath: /env-params
      workingDir: /env-params
    - name: build-container-image
      command:
        - buildah
        - bud
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--layers'
        - '-f'
        - ext-dockerfile.gen
        - '-t'
        - $(resources.outputs.image-resource.url)
        - .
      image: registry.redhat.io/rhel8/buildah
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - name: pipeline-cache
          mountPath: /var/lib/containers
        - name: envparams
          mountPath: /env-params
      workingDir: /env-params
    - name: view-images
      command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - name: pipeline-cache
          mountPath: /var/lib/containers
        - name: envparams
          mountPath: /env-params
      workingDir: /env-params
  volumes:
    - emptyDir: {}
      name: envparams
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: pipeline-task-cache-pvc-1
